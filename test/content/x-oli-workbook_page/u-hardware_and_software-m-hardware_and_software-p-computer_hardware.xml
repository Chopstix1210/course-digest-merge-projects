<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE workbook_page PUBLIC "-//Carnegie Mellon University//DTD Workbook Page MathML 3.8//EN" "http://oli.web.cmu.edu/dtd/oli_workbook_page_mathml_3_8.dtd"><workbook_page xmlns:bib="http://bibtexml.sf.net/" xmlns:cmd="http://oli.web.cmu.edu/content/metadata/2.1/" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:pref="http://oli.web.cmu.edu/preferences/" xmlns:theme="http://oli.web.cmu.edu/presentation/" xmlns:wb="http://oli.web.cmu.edu/activity/workbook/" id="u-hardware_and_software-m-hardware_and_software-p-computer_hardware"><head><title>Computer Hardware</title><objref idref="u-hardware_and_software-m-hardware_and_software-p-computer_hardware_LO_1" /></head><body><image id="c64f2185fc194a5da0b1c6c1885d50b8" src="../webcontent/1x1.png" alt="" style="inline" vertical-align="middle"><caption /><popout enable="false"></popout></image><section id="c51e45cf0b8d4bfbb284b4796f820e7d"><title>Introduction to Computer Hardware</title><body><p id="fe9dfc0fca244d5889e03fd58426d1b1">Computer hardware is like a piano, and software is the music that plays on it. This section introduces the main ideas of computer hardware, and the next section introduces computer software. </p></body></section><section id="ec5179b3b21c4fe2a09a4659716d9338"><title>Computer Chips and Transistors</title><body><p id="f9d64c8e214e478f892ba1c2d0fee120">A computer chip is a fingernail-sized piece of silicon with transistors and other electronic components etched onto it. Silicon is a glassy substance made out of sand, not to be confused with the similar sounding substance &quot;silicone,&quot; which is soft and rubbery.</p><p id="bd40ec5041f94a918251e74e21f45e28">Silicon chips are generally <em style="italic">solid state</em>, meaning they are just electronic with no moving parts. Silicon chips are embedded in a plastic package, and tiny wires connect to spots on the chip.</p><p id="e3b51e1f66024329a0f6aa9170af77cf"><image id="f96b6e4d5671463a81415ddace733bd4" src="../webcontent/chip_photo.jpg" alt="" style="inline" vertical-align="middle"><caption /><popout enable="false"></popout></image> Silicon chip image (Wikipedia) by <link href="http://www.flickr.com/photos/biwook/153056995/" target="new" internal="false">Ioan Sameli</link>,<link href="http://creativecommons.org/licenses/by-sa/2.0)" target="new" internal="false">CC BY-SA 2.0</link> via Wikimedia Commons. </p></body></section><section id="f06a5dc20a8d4145bea4fed0409440f5"><title>Moore&apos;s Law</title><body><p id="c723bd7d47bf4d9c90b7b1e25a0af725">The amazing trend for silicon chips is that each year, they grow both more powerful and cheaper, and this trend is most well known as Moore&apos;s Law.</p><p id="a0d4401f57f04bf3b9526cd8e9a7061c">Moore&apos;s law (Gordon Moore, Intel co-founder) states that the density of transistors on a chip doubles about every 2 years or so (sometimes listed as every 18 months). In other words, in about 2 years, chip-making technology continuously improves to fit double the number of transistors on the same sized chip. Moore&apos;s law is not a scientific law, just a broad prediction about chip making that keeps turning out to be true.</p><p id="f6ec674f4a2c4fd0aab75688b868e763">As a practical matter, we all see Moore&apos;s law in the gradual increase in capacity of computer hardware. One year, for example, a smartphone has a capacity of 1 gigabyte (<em style="italic">gigabyte</em> is explained in detail in a later section). Two years later, the capacity of the same brand smartphone doubles to 2 gigabytes, but cost stays the same. Two years later, the capacity doubles again to 4 gigabytes. This is Moore&apos;s law: the chip inside the smartphone has twice as many transistors every 2 years, but at the same cost.</p><p id="d1e80cab7e20484ca7c958790a104cef">Moore’s law also explains why, for example, the price of a 2-gigabyte chip today is dramatically less than it was two years ago for exactly the same chip. With cheaper computer chips, it becomes cost effective to use them in more places. Chips have gotten so cheap that they are used in thermostats, singing birthday cards, and so on.</p></body></section><wb:inline idref="a_f94e5ce7ae7f4b899341626e3b3fd1fa" purpose="learnbydoing" /><wb:inline idref="a_1e455c1ceea64a99bbf1da2d560052a6" purpose="learnbydoing" /><wb:inline idref="a_affb920167ad4b69b508c3f07d79a6cf" purpose="learnbydoing" /><section id="a031c18ffae84c2f83210e45ebb716fb"><title>Computer Hardware Components</title><body><p id="a08c25e2eb7e4e7eaa304b943ce3bf56">Now we look at the three major parts that make up a computer: <em style="italic">CPU</em>,<em style="italic">RAM</em>, and <em style="italic">persistent storage</em>. These three components are found in all laptops, smartphones, tablets.</p><section id="a8421a6608c2487d9499c202a5133893"><title>CPU</title><body><p id="e3d2facee44b4b9c9f6e160149e9f697">The CPU (central processing unit) is the &quot;brains&quot; of the computer. The CPU does the active &quot;running&quot; of code, manipulating data, while the other components have a more passive role, such as storing data. When we say that a computer can do a billion additions per second, it&apos;s the CPU inside the computer doing the additions. When you hit the Run button to run some code in this class, it&apos;s the CPU that ultimately &quot;runs&quot; your code. Later on, we will complete the picture of how your JavaScript code for this course is run by the CPU.</p></body></section><section id="d4c28cb53a014f018039545dff1977d5"><title>RAM</title><body><p id="b836170a18ae44c6a5fb99a1e03b8e43">RAM (random access memory) is the working scratchpad memory the computer uses to store code and data that are being actively used. RAM is effectively a storage area of bytes under the control of the CPU. RAM is relatively fast, able to retrieve the value of any particular byte in a few nanoseconds (1 nanosecond is 1 billionth of a second). The other main feature of RAM is that it keeps its state only for as long as it is supplied with power—RAM is <em style="italic">volatile</em>, not <em style="italic">persistent</em>. </p><p id="cc402a1a86674e1299062859ed330aa9">Suppose you are working on your computer and it suddenly loses power and the screen goes blank. You understand that what you were working on is gone. The RAM has been wiped clean, leaving you only with what you last saved to persistent storage (below).</p></body></section><section id="dfdd97e292854c108d0a13e97216850f"><title>Persistent Storage</title><body><p id="a369756d856c407f9d961ae6fa689010">Persistent storage provides long term storage of bytes. The stored bytes are typically visualized for the user as files and folders. <em style="italic">Persistent</em> means that the bytes are stored even when power is removed.</p><p id="e53974883c12499c8a856571b290cd7e">At one time, persistent storage was provided by hard drives, which use a spinning magnetic platter to store bytes. More recently, solid state <em style="italic">flash</em> storage has become more popular, storing bytes on chips. Flash storage is what underlies USB thumb drives, SD cards for use in cameras, and the built-in storage in tablets and phones.</p><p id="dd49fcd124ba43f49dcd28b48155d416">Flash storage is faster and uses less power than a hard drive. However, per byte, flash is significantly more expensive than hard drive storage. Flash has been getting cheaper, so it may take over niches at the expense of hard drives. Flash is much slower than RAM, so it is not a good replacement for RAM. Note that Adobe Flash is an unrelated concept; it is a proprietary media format.</p><p id="d31543c5d372476aa936320366980588">Note that flash storage may become corrupted sitting around for, say, 10 or 20 years. Nobody is quite sure how long it lasts, but don&apos;t use it as permanent archive storage.</p></body></section></body></section><wb:inline idref="a_2ada6bde0ec140faa61e33f67887d281" purpose="learnbydoing" /><wb:inline idref="a_53989f775c9f42f68827db9df4080e8f" purpose="learnbydoing" /><wb:inline idref="a_4080dc48830a48f18895d76202149868" purpose="learnbydoing" /></body></workbook_page>
