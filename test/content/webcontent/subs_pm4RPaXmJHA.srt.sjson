{
  "start": [
    1300, 
    6599, 
    11290, 
    17160, 
    23749, 
    28669, 
    34239, 
    39370, 
    43570, 
    47199, 
    52890, 
    58629, 
    61929, 
    67680, 
    71390, 
    75640, 
    80260, 
    84150, 
    89900, 
    95040, 
    99280, 
    103250, 
    106830, 
    110040, 
    113610, 
    119170, 
    123390, 
    126630, 
    131070, 
    134310, 
    137710, 
    144310, 
    149390, 
    154940, 
    157920, 
    161700, 
    164580, 
    167810, 
    172490, 
    177819, 
    183340, 
    189730, 
    194870, 
    198230, 
    204920, 
    207430, 
    210770, 
    214569, 
    220569, 
    224340, 
    230340, 
    233270, 
    238590, 
    244520, 
    249209, 
    254090, 
    260798, 
    263419, 
    269330, 
    274889, 
    279860, 
    286240, 
    289919, 
    293930, 
    296210, 
    307740, 
    311319, 
    315490, 
    324719, 
    329550, 
    336909, 
    338569, 
    341219, 
    345159, 
    351139, 
    355819, 
    360180, 
    365879, 
    368789, 
    374039, 
    378749, 
    382650, 
    385650, 
    390159, 
    394279, 
    398409, 
    402849, 
    405879, 
    408629, 
    412219, 
    416849, 
    420389, 
    425270, 
    428509, 
    433259, 
    436360, 
    440699, 
    446969, 
    460009, 
    469779, 
    479319, 
    485059, 
    488360, 
    492599, 
    495020, 
    498159, 
    503009, 
    507379, 
    512950, 
    518880, 
    526180, 
    534490, 
    546500, 
    553579, 
    561600, 
    565759, 
    574050, 
    582170, 
    586100, 
    589839, 
    598310, 
    607779, 
    614360, 
    621279, 
    629829, 
    634589, 
    638519, 
    642240, 
    646079, 
    650940, 
    653980, 
    658470, 
    665149, 
    668009, 
    672170, 
    676199, 
    678899, 
    683230, 
    687709
  ], 
  "end": [
    6599, 
    11290, 
    17160, 
    23749, 
    28669, 
    34239, 
    39370, 
    43570, 
    47199, 
    52890, 
    58629, 
    61929, 
    67680, 
    71390, 
    75640, 
    80260, 
    84150, 
    89900, 
    95040, 
    99280, 
    103250, 
    106830, 
    110040, 
    113610, 
    119170, 
    123390, 
    126630, 
    131070, 
    134310, 
    137710, 
    144310, 
    149390, 
    154940, 
    157920, 
    161700, 
    164580, 
    167810, 
    172490, 
    177819, 
    183340, 
    189730, 
    194870, 
    198230, 
    204920, 
    207430, 
    210770, 
    214569, 
    220569, 
    224340, 
    230340, 
    233270, 
    238590, 
    244520, 
    249209, 
    254090, 
    260799, 
    263419, 
    269330, 
    274889, 
    279860, 
    286240, 
    289919, 
    293930, 
    296210, 
    303210, 
    311319, 
    315490, 
    322490, 
    329550, 
    336550, 
    338569, 
    341219, 
    345159, 
    351139, 
    355819, 
    360180, 
    365879, 
    368789, 
    374039, 
    378749, 
    382650, 
    385650, 
    390159, 
    394279, 
    398409, 
    402849, 
    405879, 
    408629, 
    412219, 
    416849, 
    420389, 
    425270, 
    428509, 
    433259, 
    436360, 
    440699, 
    446969, 
    453969, 
    467009, 
    476779, 
    485059, 
    488360, 
    492599, 
    495020, 
    498159, 
    503009, 
    507379, 
    512950, 
    518880, 
    525880, 
    533180, 
    541490, 
    553500, 
    560579, 
    565759, 
    572759, 
    581050, 
    586100, 
    589839, 
    596839, 
    605310, 
    614360, 
    621279, 
    628279, 
    634589, 
    638519, 
    642240, 
    646079, 
    650940, 
    653980, 
    658470, 
    665149, 
    668009, 
    672170, 
    676199, 
    678899, 
    683230, 
    687709, 
    688990
  ], 
  "text": [
    "In this section, I wanna show you can take a simple test, like startsWith(&quot;A&quot;), and", 
    "use, the notion of AND, and OR, to combine it with other tests to sort of put", 
    "together a more complicated test. So this is called Boolean logic. So the way this", 
    "is gonna work, is, in code, the notion of AND is the, the symbol for that two", 
    "ampersands run together (&amp;&amp;). And the, the symbol for OR is two vertical bars (||),", 
    "put together. So let me show you what that looks like. So here&#39;s some code. And it", 
    "has, the first test just says if the name starts with &quot;A&quot;, just as we&#39;ve seen before,", 
    "and that test is, it&#39;s complete and functional. So that is not changed by", 
    "adding the notion of Boolean logic. So for Boolean logic, what we do is we take that", 
    "test and we follow it with two ampersands. So you would pronounce that as, AND. And", 
    "then it&#39;s followed by a second test. The second test is also complete and makes", 
    "sense on its own. So, what this does is it just takes two tests and it puts them", 
    "together, and it says, well. For this overall if-test to be true, both of these", 
    "subparts have to be true. So the components are, well here, I&#39;ll, I&#39;ll run", 
    "it. So what this says is, names that begin with &quot;A&quot;. That has to be true. And the name", 
    "has to end with &quot;y&quot;. So if I run it, we just get this, you know, kinda shorter list of", 
    "names that begin with &quot;A&quot; and end with &quot;y&quot;. Syntactically like I said it has the two", 
    "tests, each of which is complete. They&#39;re joined with AND or, OR as we&#39;ll see in", 
    "a minute. And then finally there is still this one set of parentheses, a left most", 
    "parentheses and a right most, a right most parenthesis, around the entire thing. So", 
    "I&#39;ll do a bunch of examples, like this. A couple other, one other thing to point out", 
    "about this, in this case what happened is, the test is kind of long, right? I have", 
    "this whole startsWith part, and the ampersand, so if I did it all on one line,", 
    "it gets a little, a little long. So what&#39;s happened in this case is I, actually I hit", 
    "return after the ampersand. I went down here and I hit the space bar, to get the", 
    "row over here and kind of line it up. So I wrote the second test on a second line.", 
    "That&#39;s optional but you can do it. Putting in spaces and stuff like that doesn&#39;t", 
    "upset the code. So, I&#39;m, always my examples I&#39;ll sort of neaten up in this", 
    "way, Where I&#39;ll tend to write one test per line, and then I&#39;ll align them this way.", 
    "So here&#39;s the second test. The only thing that&#39;s a little confusing is to note that", 
    "there are two parentheses are required here. This, this first one just balances", 
    "the parentheses for the endsWith. And then the second one, is the one that covers the", 
    "entire test, so it matches up to the, that first one. So if you leave that out,", 
    "actually I can illustrate this, so it&#39;s a pretty easy error to leave that one out,", 
    "&#39;cuz you have to kinda realize alright I need two there. So in that case, not", 
    "always, but the run button for the, just for this class, will try to give you an", 
    "error message, like oh, it looks like there&#39;s a missing parentheses there. So", 
    "now form it that way we&#39;ll get them, we&#39;re still good. As I said before each of", 
    "these tests is complete and stand on its own. So just syntactly just the way we did", 
    "things before. There&#39;s this one form of the code that looks right but is wrong.", 
    "And so I&#39;ll create that here. So if you just write it this way. So I&#39;ll", 
    "just sort of pronounce it. row.getField(&quot;name&quot;), that startsWith(&quot;a&quot;) AND", 
    "endsWith(&quot;y&quot;). So just to the ear to a human, they would know", 
    "what that means, but this code does not work. The problem is the second term. On", 
    "its own, doesn&#39;t make sense. Right? Doesn&#39;t just stand on its own like ends", 
    "with, well it doesn&#39;t make sense. Usually what we need is, we&#39;re gonna put in a", 
    "cursor here, we would need row.getField(&quot;name&quot;) or &quot;rank&quot; or whatever it&#39;s gonna", 
    "be .endsWith. So this is not working. Each, each, to the left and the right of", 
    "the ampersand, each task has to be complete. So in this case, I&#39;ll just sort", 
    "of hit undo in Firefox here, the, if we wanna be talking about name, like we", 
    "spell it out for the first test, and then we also just completely spell it out for", 
    "the second test. So each test makes sense to the computer. Alrighty, So, I&#39;m gonna", 
    "try another example here. Let&#39;s see. So right now, if I run this, it just shows", 
    "all the &quot;A&quot; names, which is quite a lot. What the problem statement says is, change", 
    "the code so it prints the names that start with &quot;A&quot; and the rank is less than 50. So,", 
    "oh here&#39;s, here&#39;s the first test, and I&#39;ll add two ampersands, and return let&#39;s", 
    "say row, that starts, that startsWith(&quot;A&quot;) is one test and now we&#39;re gonna add, I&#39;m", 
    "gonna combine it with an AND, with the second test, where I&#39;ll say rank, oh let&#39;s", 
    "say less than or equal to 50. So I think I&#39;ll try it, yeah so that works. So", 
    "we still get &quot;A&quot; names but now we&#39;re just getting up to rank 50. I&#39;m just gonna try", 
    "a third example here. Alright, now we&#39;ll do an example with OR. Change the code", 
    "below, so it prints rows where the following is true. Name starts with &quot;X&quot;, or", 
    "the name stars with &quot;Y&quot;, or the name stars with &quot;C&quot;. So if I just run, run it right", 
    "now, the code that&#39;s there just does &quot;X&quot;. So", 
    "I wanna use OR. And we&#39;ll copy this. So by using an OR-test. You make", 
    "multiple ways for the overall if-test to be true. It&#39;s like, well, the if-test were", 
    "true if this one is true, or if this other thing is true. So it&#39;s kind of a widening.", 
    "So here I&#39;ll say, OR row.getField - &quot;Y&quot;. So, for the previous run, we only got &quot;X&quot;.", 
    "Alright? So I&#39;m gonna run this. Oh, so now we get &quot;X&quot; and &quot;Y&quot;. So there&#39;s &quot;Yusuf&quot; and", 
    "&quot;Yeritza&quot;. Notice that I, my goal ultimately was to show &quot;X&quot; or &quot;Y&quot; or &quot;Z&quot;,", 
    "but I think it is kinda nice if you get the code", 
    "into a kind of half built state, but where it makes sense. You know, just try running", 
    "it and kind of verify, oh that works before going on to do the whole thing.", 
    "That&#39;s kind of a classic computer code rule of thumb; don&#39;t try and do the entire", 
    "thing in one step, OR startsWith(&quot;Z&quot;). So, I", 
    "guess partly what I&#39;m showing here is. You can have multiple ORs and multiple ANDs and", 
    "string things together. So let&#39;s try that, There it goes, Quite a few &quot;Z&quot;", 
    "names. So there we have it, &quot;X&quot; or &quot;Y&quot; or&quot; &quot;Z,", 
    "so this shows the two vertical bars, and then in this case I have strung together", 
    "three things. For this class, I will only, I&#39;ll use either a bunch of things", 
    "connected with AND or a bunch of things connected with OR. I won&#39;t combine them.", 
    "Combine them just brings up some other cases that are kind of interesting but I", 
    "not, I don&#39;t really want to get into. They don&#39;t really help a lot. Other thing I", 
    "should mention about this, alright so I should just apologize to this. This", 
    "ampersand business is sort of a historical accident, or the vertical bar business.", 
    "Language, influencial language chose this in, like the mid&#39;70s. And once one", 
    "language had chosen this symbol to mean OR, some other languages thought, oh, well", 
    "we should just use that convention. And so it just kinda snowballed, where now,", 
    "that&#39;s a very common convention. So I felt like, well, it&#39;s kind of obscure, but.", 
    "That&#39;s the convention so we should just go ahead and learn that one. Alright, So,", 
    "let&#39;s scroll down here a little bit. So actually, what I have set up is just a", 
    "large number of examples here. And there&#39;s a show solution button here, so if you", 
    "want practice or to review these examples I&#39;ve done, you could come back and it&#39;s", 
    "all sorted here. What I&#39;ll is I&#39;ll just try the, the first six. So, I&#39;ll type in", 
    "the code for those and I&#39;ll leave the others as kind of extra practice for", 
    "people who want it. Okay, so the first one says, name starts with &quot;Ab&quot;, or starts with", 
    "&quot;Ac&quot;. So I&#39;ll say there&#39;s some code here that we start with already. So it starts", 
    "with &quot;Ab&quot;. And what was it? OR starts with &quot;Ac&quot;. So this one starts with here, So this", 
    "should be an OR, Two different or&#39;s. Let&#39;s try that one. So we got &quot;A&quot;, &quot;Ac&quot; Where&#39;s", 
    "the &quot;Ac&quot; name? Oh. Look I made a bug. I typed &quot;Ab&quot; twice. Okay. There we go.", 
    "Ok, there&#39;s an &quot;Ac&quot;. That showed that interesting example of a bug, where sometimes bugs are", 
    "syntax errors where you hit the run button and it, it just, you know, it, it crashes", 
    "and you get some red output. But sometimes a bug is just that. I typed", 
    "something that does mean something to the computer, but it&#39;s not what I intended.", 
    "And so then the output is not what I expected, then I&#39;m a little bit confused.", 
    "So that&#39;s the more higher level kind of bug in this course. It&#39;s fairly", 
    "common with computers. Okay, let&#39;s see, next one. Name starts with &quot;Ab&quot;, or", 
    "&quot;Ac&quot;, or &quot;Al&quot;. Oh, I see. So this just extends. This just shows that you can have", 
    "three. So I&#39;ll say vertical bar. I&#39;ll paste this in. So it was &quot;Ac&quot;,", 
    "so &quot;Ab&quot; and &quot;Ac&quot; doesn&#39;t give us a lot but with &quot;Al&quot; you know it&#39;s quite a lot.", 
    "Okay. So the next one was, name starts with O and ends with A. So I&#39;ll say", 
    "starts, I&#39;ll just translate it. Starts with &quot;O&quot; AND ends with &quot;a&quot;. Alright. Let&#39;s", 
    "try that. Oh, there&#39;s only one, &quot;Olivia&quot;. How", 
    "bout, starts with O and gender is girl? So, we&#39;ll just get gender right here, and", 
    "then we test that is not with startsWith endsWith, but just with ==.", 
    "So, O AND girl. Oh, there&#39;s only two. So we get Olive. Okay,", 
    "name ends with &quot;a&quot; and gender is what? Change this to name.endsWith(&quot;a&quot;), and", 
    "per my previous example, my previous claim, I&#39;ll just cut that out.", 
    "Now it&#39;s half built right, name ends with &quot;a&quot;. But I could run that and sorta verify,", 
    "all rigt that&#39;s working. And then, take your working thing, and extend it. What", 
    "did I want? In this case I wanted oh, names ends with &quot;a&quot; and gender is blank.", 
    "Okay. Jesus, Lyle. Girl names neither. Boy. Oh, well, there&#39;s a few, Joshua,", 
    "Ezra. Okay, I&#39;ll do this last one, number six Rank is less than ten, and gender is", 
    "girl. So I&#39;ll change this to &quot;rank&quot;. Instead of endsWith. I&#39;ll say, less than or equal", 
    "to ten. And, so, Now I&#39;m not using startsWith, or", 
    "endsWith for either of these but just notice each one of those is a complete and", 
    "correct test as we discussed before. That one is, and that one is and I&#39;m just", 
    "joining them from there. So rank is less than ten, and gender in this case is girl.", 
    "Let&#39;s try that. So that makes sense. We just get one, two, three, four of them.", 
    "One through ten girl names. This one&#39;s kind of interesting in that this, this I", 
    "think has a sensible English translation. What this is, is. What this says is top", 
    "ten girl names, And then, We can phrase that as this AND thing. Where rank is less", 
    "than or equal to ten and gender is girl. Or indeed", 
    "ultimately we can phrase it as code. So just get it down to, to where the computer", 
    "can actually do it. So there&#39;s a few more problems here and the solutions all", 
    "available. So this is a good opportunity to come and review what I did or try a", 
    "little bit of practice before we do the exercises. Cuz these, in some sense, are -", 
    "computer languages have now gotten big enough that I can really we can have a lot", 
    "of different [inaudible] alright."
  ]
}